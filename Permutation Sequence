The set [1,2,3,...,n] contains a total of n! unique permutations.
By listing and labeling all of the permutations in order, we get the following sequence for n = 3:
"123","132","213","231","312","321"

Given n and k, return the kth permutation sequence.

Note:Given n will be between 1 and 9 inclusive.Given k will be between 1 and n! inclusive.

Example 1:Input: n = 3, k = 3  Output: "213"
Example 2:Input: n = 4, k = 9  Output: "2314"

/**
 * @param {number} n
 * @param {number} k
 * @return {string}
 */
var getPermutation = function(n, k) {
    let nums = Array(n)
	let factorial = 1;
	
	for (let i = 1; i <= n; i++) {
		nums[i-1] = i;
		factorial = i*factorial;
	}
	
	if(k <= 1){
		return nums.join('');
	}
	if(k === factorial[n]){
		return nums.reverse().join('');
	}
	
	k -= 1;
    let result = '';
	for(let i = 0; i <= n-1; i++){
		factorial = factorial/(n-i);
		
		let index = Number.parseInt(k/factorial);
       // console.log(index);
		result += nums[index];
	    nums.splice(index,1);
       // console.log(nums);
		k = k%factorial;
	}
   return result;	
}
